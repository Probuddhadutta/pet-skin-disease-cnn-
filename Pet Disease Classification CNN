{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11490697,"sourceType":"datasetVersion","datasetId":7185513}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/scratchpad/pet-disease-classification-mobilenetv2-cnn.02742a52-6d40-49ea-97f3-b9e1e827dcf9.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20250607/auto/storage/goog4_request&X-Goog-Date=20250607T142849Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=48189b12736983f939e6a5ad200f39a7177d53c3f470a82eebdb693c9184c2c90bbbbe9b0ff2cfd2a5d980ea8a1070f11c7c852a9ca2a375313023cd08811f3181da4f2eb29a52364736f594f2ac18d6940c04844ba9729e5c089031094985db321b4ea93d5e1aab4130149343318d32fe91b9b718a3bbb208b84196d605468c0a0fc19a1f75bfa51464d6f45cc553d3a077cdd2040eef11d0a76e5d3b4f5a5f415d37c8b27164eb627928bd54ed8c035f8d3a778c68067143cbf522fd668b91e7214ba017a3b03c7dee0eb73263b1b5c7da9defda992ff3d30ca48e5bcfc84efc90fd03bf40403062534046eab1ea41bfbbd31982db68327c108c7d056615b7","timestamp":1749306562944}],"toc_visible":true}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","import kagglehub\n","smadive_pet_disease_images_path = kagglehub.dataset_download('smadive/pet-disease-images')\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"Kf-dgw0fy2HI","outputId":"1aa15c52-1f50-4e31-e4bf-28ec09a9b8b4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1749306613463,"user_tz":-330,"elapsed":24613,"user":{"displayName":"PROBUDDHA DUTTA","userId":"11887293867838785446"}}},"cell_type":"code","outputs":[{"output_type":"stream","name":"stdout","text":["Downloading from https://www.kaggle.com/api/v1/datasets/download/smadive/pet-disease-images?dataset_version_number=3...\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 403M/403M [00:06<00:00, 63.9MB/s]"]},{"output_type":"stream","name":"stdout","text":["Extracting files...\n"]},{"output_type":"stream","name":"stderr","text":["\n"]},{"output_type":"stream","name":"stdout","text":["Data source import complete.\n"]}],"execution_count":1},{"cell_type":"code","source":["\n","import tensorflow as tf\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras.applications import MobileNetV2\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.layers import Dense, Dropout, GlobalAveragePooling2D, Input\n","from tensorflow.keras.optimizers import Adam\n","from sklearn.metrics import classification_report, confusion_matrix, roc_curve, auc\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np\n","import os\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-16T08:56:26.694712Z","iopub.execute_input":"2025-05-16T08:56:26.695008Z","iopub.status.idle":"2025-05-16T08:56:47.096773Z","shell.execute_reply.started":"2025-05-16T08:56:26.694976Z","shell.execute_reply":"2025-05-16T08:56:47.095962Z"},"id":"3guZHqz2y2HM","executionInfo":{"status":"ok","timestamp":1749306620947,"user_tz":-330,"elapsed":7478,"user":{"displayName":"PROBUDDHA DUTTA","userId":"11887293867838785446"}}},"outputs":[],"execution_count":2},{"cell_type":"code","source":["\n","data_dir = '/kaggle/input/pet-disease-images/data'\n","img_height, img_width = 224, 224\n","batch_size = 64\n","\n","train_datagen = ImageDataGenerator(\n","    rescale=1./255,\n","    validation_split=0.2,\n","    rotation_range=20,\n","    zoom_range=0.15,\n","    width_shift_range=0.2,\n","    height_shift_range=0.2,\n","    shear_range=0.15,\n","    horizontal_flip=True,\n","    fill_mode=\"nearest\"\n",")\n","\n","train_generator = train_datagen.flow_from_directory(\n","    data_dir,\n","    target_size=(img_height, img_width),\n","    batch_size=batch_size,\n","    class_mode='categorical',\n","    subset='training'\n",")\n","\n","val_generator = train_datagen.flow_from_directory(\n","    data_dir,\n","    target_size=(img_height, img_width),\n","    batch_size=batch_size,\n","    class_mode='categorical',\n","    subset='validation',\n","    shuffle=False\n",")\n","class_names = list(train_generator.class_indices.keys())\n","num_classes = len(class_names)\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-16T08:56:47.09833Z","iopub.execute_input":"2025-05-16T08:56:47.099175Z","iopub.status.idle":"2025-05-16T08:56:47.72649Z","shell.execute_reply.started":"2025-05-16T08:56:47.099127Z","shell.execute_reply":"2025-05-16T08:56:47.725751Z"},"id":"TyOL9_IEy2HM","colab":{"base_uri":"https://localhost:8080/","height":373},"executionInfo":{"status":"error","timestamp":1749306622968,"user_tz":-330,"elapsed":229,"user":{"displayName":"PROBUDDHA DUTTA","userId":"11887293867838785446"}},"outputId":"e758c9c1-92fa-4991-ff0a-a5963e01e3f2"},"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/kaggle/input/pet-disease-images/data'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-26f41ff52d37>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     15\u001b[0m )\n\u001b[1;32m     16\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 17\u001b[0;31m train_generator = train_datagen.flow_from_directory(\n\u001b[0m\u001b[1;32m     18\u001b[0m     \u001b[0mdata_dir\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m     \u001b[0mtarget_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg_height\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimg_width\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/legacy/preprocessing/image.py\u001b[0m in \u001b[0;36mflow_from_directory\u001b[0;34m(self, directory, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, save_to_dir, save_prefix, save_format, follow_links, subset, interpolation, keep_aspect_ratio)\u001b[0m\n\u001b[1;32m   1136\u001b[0m         \u001b[0mkeep_aspect_ratio\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1137\u001b[0m     ):\n\u001b[0;32m-> 1138\u001b[0;31m         return DirectoryIterator(\n\u001b[0m\u001b[1;32m   1139\u001b[0m             \u001b[0mdirectory\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1140\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/keras/src/legacy/preprocessing/image.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, directory, image_data_generator, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, data_format, save_to_dir, save_prefix, save_format, follow_links, subset, interpolation, keep_aspect_ratio, dtype)\u001b[0m\n\u001b[1;32m    451\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mclasses\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    452\u001b[0m             \u001b[0mclasses\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 453\u001b[0;31m             \u001b[0;32mfor\u001b[0m \u001b[0msubdir\u001b[0m \u001b[0;32min\u001b[0m \u001b[0msorted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlistdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdirectory\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    454\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdirectory\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msubdir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    455\u001b[0m                     \u001b[0mclasses\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msubdir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/kaggle/input/pet-disease-images/data'"]}],"execution_count":3},{"cell_type":"code","source":["\n","base_model = MobileNetV2(include_top=False, input_tensor=Input(shape=(img_height, img_width, 3)), weights='imagenet')\n","base_model.trainable = False\n","\n","x = base_model.output\n","x = GlobalAveragePooling2D()(x)\n","x = Dropout(0.5)(x)\n","predictions = Dense(num_classes, activation='softmax')(x)\n","\n","model = Model(inputs=base_model.input, outputs=predictions)\n","model.compile(optimizer=Adam(learning_rate=0.0001), loss='categorical_crossentropy', metrics=['accuracy'])\n","\n","model.summary()\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-16T08:56:47.727559Z","iopub.execute_input":"2025-05-16T08:56:47.728004Z","iopub.status.idle":"2025-05-16T08:56:49.143408Z","shell.execute_reply.started":"2025-05-16T08:56:47.727975Z","shell.execute_reply":"2025-05-16T08:56:49.142564Z"},"id":"gHNDaJ3_y2HN","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"error","timestamp":1749306631540,"user_tz":-330,"elapsed":1442,"user":{"displayName":"PROBUDDHA DUTTA","userId":"11887293867838785446"}},"outputId":"48305938-c2aa-46f5-dca6-15f0eee54a60"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-4-63dbb84b3341>:1: UserWarning: `input_shape` is undefined or non-square, or `rows` is not in [96, 128, 160, 192, 224]. Weights for input shape (224, 224) will be loaded as the default.\n","  base_model = MobileNetV2(include_top=False, input_tensor=Input(shape=(img_height, img_width, 3)), weights='imagenet')\n"]},{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/mobilenet_v2/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_1.0_224_no_top.h5\n","\u001b[1m9406464/9406464\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n"]},{"output_type":"error","ename":"NameError","evalue":"name 'num_classes' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-63dbb84b3341>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mGlobalAveragePooling2D\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDropout\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mpredictions\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_classes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'softmax'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mModel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbase_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpredictions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'num_classes' is not defined"]}],"execution_count":4},{"cell_type":"code","source":["history = model.fit(\n","    train_generator,\n","    validation_data=val_generator,\n","    epochs=100\n",")\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-16T08:56:49.144317Z","iopub.execute_input":"2025-05-16T08:56:49.144616Z","iopub.status.idle":"2025-05-16T10:59:27.996282Z","shell.execute_reply.started":"2025-05-16T08:56:49.144594Z","shell.execute_reply":"2025-05-16T10:59:27.995376Z"},"id":"mxftZQ9Sy2HN","colab":{"base_uri":"https://localhost:8080/","height":211},"executionInfo":{"status":"error","timestamp":1749306633415,"user_tz":-330,"elapsed":29,"user":{"displayName":"PROBUDDHA DUTTA","userId":"11887293867838785446"}},"outputId":"8fefbdf8-1899-4514-8aba-4871f9d5b521"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'model' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-345c5bcd41df>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m history = model.fit(\n\u001b[0m\u001b[1;32m      2\u001b[0m     \u001b[0mtrain_generator\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mval_generator\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m )\n","\u001b[0;31mNameError\u001b[0m: name 'model' is not defined"]}],"execution_count":5},{"cell_type":"code","source":["\n","val_generator.reset()\n","Y_pred = model.predict(val_generator)\n","y_pred = np.argmax(Y_pred, axis=1)\n","y_true = val_generator.classes\n","\n","# Confusion Matrix\n","cm = confusion_matrix(y_true, y_pred)\n","plt.figure(figsize=(10, 8))\n","sns.heatmap(cm, annot=True, fmt=\"d\", xticklabels=class_names, yticklabels=class_names, cmap='Blues')\n","plt.xlabel('Predicted')\n","plt.ylabel('True')\n","plt.title('Confusion Matrix')\n","plt.show()\n","\n","# Classification Report\n","print(classification_report(y_true, y_pred, target_names=class_names))\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-16T10:59:27.997634Z","iopub.execute_input":"2025-05-16T10:59:27.997975Z","iopub.status.idle":"2025-05-16T10:59:51.341126Z","shell.execute_reply.started":"2025-05-16T10:59:27.99795Z","shell.execute_reply":"2025-05-16T10:59:51.340342Z"},"id":"S72fM9hCy2HO","colab":{"base_uri":"https://localhost:8080/","height":211},"executionInfo":{"status":"error","timestamp":1749306636494,"user_tz":-330,"elapsed":7,"user":{"displayName":"PROBUDDHA DUTTA","userId":"11887293867838785446"}},"outputId":"3b3b6749-d418-4afb-a279-d6f1169e35c5"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'val_generator' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-ea491146b8fa>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mval_generator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mY_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mval_generator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mY_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0my_true\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mval_generator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclasses\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'val_generator' is not defined"]}],"execution_count":6},{"cell_type":"code","source":["\n","# Compute ROC curve and AUC for each class\n","fpr = {}\n","tpr = {}\n","roc_auc = {}\n","\n","y_true_bin = tf.keras.utils.to_categorical(y_true, num_classes=num_classes)\n","for i in range(num_classes):\n","    fpr[i], tpr[i], _ = roc_curve(y_true_bin[:, i], Y_pred[:, i])\n","    roc_auc[i] = auc(fpr[i], tpr[i])\n","\n","# Plot ROC curves\n","plt.figure(figsize=(10, 8))\n","for i in range(num_classes):\n","    plt.plot(fpr[i], tpr[i], label=f\"{class_names[i]} (AUC = {roc_auc[i]:.2f})\")\n","plt.plot([0, 1], [0, 1], 'k--')\n","plt.xlabel(\"False Positive Rate\")\n","plt.ylabel(\"True Positive Rate\")\n","plt.title(\"ROC Curve - Multi-class\")\n","plt.legend()\n","plt.show()\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-16T10:59:51.342016Z","iopub.execute_input":"2025-05-16T10:59:51.342275Z","iopub.status.idle":"2025-05-16T10:59:51.831962Z","shell.execute_reply.started":"2025-05-16T10:59:51.342255Z","shell.execute_reply":"2025-05-16T10:59:51.83029Z"},"id":"moHV8V2oy2HO","colab":{"base_uri":"https://localhost:8080/","height":211},"executionInfo":{"status":"error","timestamp":1749306639974,"user_tz":-330,"elapsed":41,"user":{"displayName":"PROBUDDHA DUTTA","userId":"11887293867838785446"}},"outputId":"e0a4a78c-3816-46aa-a039-9f04d6c1eb50"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'y_true' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-06a9d4328ee0>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mroc_auc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0my_true_bin\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_categorical\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_classes\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnum_classes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_classes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0mfpr\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtpr\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mroc_curve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true_bin\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_pred\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'y_true' is not defined"]}],"execution_count":7},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","# Extract values\n","acc = history.history['accuracy']\n","val_acc = history.history['val_accuracy']\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","epochs_range = range(1, len(acc) + 1)\n","\n","plt.figure(figsize=(18, 10))\n","\n","# 1. Full Accuracy Plot\n","plt.subplot(2, 2, 1)\n","plt.plot(epochs_range, acc, 'bo-', label='Train Accuracy')\n","plt.plot(epochs_range, val_acc, 'ro-', label='Validation Accuracy')\n","plt.title('Model Accuracy (Full)')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","plt.grid(True)\n","\n","# 2. Full Loss Plot\n","plt.subplot(2, 2, 2)\n","plt.plot(epochs_range, loss, 'bo-', label='Train Loss')\n","plt.plot(epochs_range, val_loss, 'ro-', label='Validation Loss')\n","plt.title('Model Loss (Full)')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.grid(True)\n","\n","# 3. Zoomed-in Accuracy (Last 5 Epochs)\n","plt.subplot(2, 2, 3)\n","plt.plot(epochs_range[-5:], acc[-5:], 'bo--', label='Train Accuracy')\n","plt.plot(epochs_range[-5:], val_acc[-5:], 'ro--', label='Validation Accuracy')\n","plt.title('Zoomed Accuracy (Last 5 Epochs)')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","plt.grid(True)\n","\n","# 4. Train vs. Validation Loss Difference\n","plt.subplot(2, 2, 4)\n","loss_diff = np.array(val_loss) - np.array(loss)\n","plt.plot(epochs_range, loss_diff, 'mo-', label='Val Loss - Train Loss')\n","plt.axhline(0, color='gray', linestyle='--')\n","plt.title('Difference in Validation vs Train Loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss Difference')\n","plt.legend()\n","plt.grid(True)\n","\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-16T10:59:51.835417Z","iopub.execute_input":"2025-05-16T10:59:51.835754Z","iopub.status.idle":"2025-05-16T10:59:52.825862Z","shell.execute_reply.started":"2025-05-16T10:59:51.835732Z","shell.execute_reply":"2025-05-16T10:59:52.824837Z"},"id":"FSTFQLuhy2HO","colab":{"base_uri":"https://localhost:8080/","height":211},"executionInfo":{"status":"error","timestamp":1749306643682,"user_tz":-330,"elapsed":70,"user":{"displayName":"PROBUDDHA DUTTA","userId":"11887293867838785446"}},"outputId":"0e033f38-1119-4acf-ab8b-80b08311320d"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'history' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-e9e69909b14a>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Extract values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0macc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mval_acc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'val_accuracy'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mloss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'loss'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'history' is not defined"]}],"execution_count":8}]}